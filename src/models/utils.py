from tqdm.notebook import tqdm
import os
import pandas as pd
import glob
import tqdm
import shutil

def move_results(result_folder, new_folder):
    """This function moves fake images generated by gan models to a new folder to facilitate analysis later

    Args:
        result_folder (_type_): folder with gan results
        new_folder (_type_): new folder to store only fake images
    """
    os.makedirs(new_folder, exist_ok = True)
    # get a list of fake img
    fake_img_list = glob.glob(os.path.join(result_folder,"*_fake_B.png"))
    # copy to the new folder
    for fake_img in tqdm.tqdm(fake_img_list):
        fake_img_file_name = os.path.basename(fake_img).replace("_fake_B.png","") + ".png"
        shutil.copy2(fake_img,os.path.join(new_folder,fake_img_file_name))

class CorrelationAnalysis:
    """class for analyzing correlation result
    """
    
    def __init__(self,gsv_result_csv, mly_result_csv, gan_result_csv, output_folder):
        self.gsv_result_csv = gsv_result_csv
        self.mly_result_csv = mly_result_csv
        self.gan_result_csv = gan_result_csv
        self.output_folder = output_folder
        
    def load_rename(self, file_path, suffix):
        """load csv as df and rename col names

        Args:
            file_path (str): file path to the segmentation result
            prefix (str): prefix to add to col names
        """
        result = pd.read_csv(file_path)
        # rename all the cols excepts for the first column, which is pid
        result.columns = [colname if "file" in colname else colname + suffix for i, colname in enumerate(result.columns)]
        return result

    def merge_save(self):
        """merge and save the results
        """
        # load
        gsv_result = self.load_rename(self.gsv_result_csv, "_gsv")
        mly_result = self.load_rename(self.mly_result_csv, "_mly")
        gan_result = self.load_rename(self.gan_result_csv, "_gan")
        # merge
        merged_result = (gsv_result.merge(mly_result,on=["filename_key"],how="left").
            merge(gan_result,on=["filename_key"],how="left")
            )
        # save as csv
        merged_result.to_csv(os.path.join(self.output_folder,"segmentation_result.csv"))